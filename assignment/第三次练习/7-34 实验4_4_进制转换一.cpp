/*已知一个只包含0和1的二进制数，二进制数的长度不大于10。你的任务是将其转换为十进制数并打印出来。
提示：用除法和求余运算每次从右到左获取二进制整数的各位数字。在十进制数值系统中，最右边的数字是个位，个位的左边依次是十位、百位、千位等等。与之类似，在二进制数值系统中，最右边的数字是1位，左边的数字依次为2位、4位、8位等等。十进制数234可分解为4*10^0+3*10^1+2*10^2，二进制数1101可分解为1*2^0+0*2^1+1*2^2+1*2^3，它等价于十进制数1+0+4+8，即13。

输入格式:
为一个只包含0和1的整数n（长度不超过10位），代表二进制数。

输出格式:
为转换得到的十进制数。

输入样例:
11111

输出样例:
在这里给出相应的输出。例如：

31
  */

#include <iostream>
#include <string>
#include <cmath>

using namespace std;

int main()
{
    string str;
    cin >> str;
    int dec = 0, len = str.size();
    for (int i = len - 1; i >= 0; i --)
        if (str[i] == '1') dec += pow(2, len - 1 - i);
    cout << dec << endl;
    return 0;
}
